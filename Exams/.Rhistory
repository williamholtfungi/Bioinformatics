getwd()
mySequences <- readDNAStringSet("sequences.fasta")
mySequences <- Biostrings::readDNAStringSet("sequences.fasta")
myFirstAlignment <- msa(mySequences)
#MSA alignment
myFirstAlignment <- msa::msa(mySequences)
myFirstAlignment
print(myFirstAlignment, show="complete")
#### Creating a consensus ####
alignment_set <- DNAStringSet(mySequences)
#### Creating a consensus ####
alignment_set <- Biostrings::DNAStringSet(mySequences)
consensus <- consensusString(alignment_set)
consensus <- Biostrings::consensusString(alignment_set)
print(consensus)
####Function to count gaps in a consensus ####
count_gaps <- function(consensus) {
#Search for the presence of "-" in the sequence
gap_positions <- grepl("-", consensus)
#Count the number of TRUE values (i.e., gaps)
num_gaps <- sum(gap_positions)
return(num_gaps)
}
#Count gaps in each sequence of the consensus
num_gaps_in_sequences <- sapply(consensus, count_gaps)
#Total gaps in the alignment
total_gaps <- sum(num_gaps_in_sequences)
#Print the total number of gaps
print(total_gaps)
#Importing the "Most Different Sequence"
Sequence06 <- Biostrings::readDNAStringSet("sequence06.fasta")
#Translating Sequence06 into AA
aa_sequence <- Biostrings::translate(Sequence06)
aa_sequence
as.character(aa_sequence)
#AA Sequence to a FASTA file
output_file <- "amino_acid_sequence.fasta"
writeXStringSet(aa_sequence, file = output_file,
format = "fasta", width = 60)
Biostrings::writeXStringSet(aa_sequence, file = output_file,
format = "fasta", width = 60)
#4.Putting the Accession Numbers into R ####
accession_numbers<- read.table("AAZ22545.1")
#5.List of Accession numbers ####
accession_numbers <- ("AAZ22545.1")
# Converting it into a character string
accession_string <- paste(accession_numbers, collapse = ",")
# Print/look at the string
print(accession_string)
#6. Reading accession numbers into the GO format ####
AccessionNumbersGO <- GetProteinGOInfo(accession_numbers)
#6. Reading accession numbers into the GO format ####
AccessionNumbersGO <- UniprotR::GetProteinGOInfo(accession_numbers)
#6. Reading accession numbers into the GO format ####
AccessionNumbersGO <- UniprotR::GetProteinGOInfo(accession_numbers)
#6. Reading accession numbers into the GO format ####
AccessionNumbersGO <- UniprotR::GetProteinGOInfo(accession_numbers)
str(AccessionNumbersGO)
#7. Extract GO from AccessionNumbersGO ####
View(AccessionNumbersGO)
#Finding associated diseases or pathologies of the gene####
GetPathology_Biotech(accession_numbers)
#Finding associated diseases or pathologies of the gene####
UniprotR::GetPathology_Biotech(accession_numbers)
#NA on all counts
Get.diseases(accession_numbers)
#AlphaFold
fetch_alphafold_prediction(accession_numbers)
#AlphaFold
protti::fetch_alphafold_prediction(accession_numbers)
aa_sequence
